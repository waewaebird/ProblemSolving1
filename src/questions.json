[
  {
    "number": "s1",
    "title": "문자 찾기",
    "description": "한 개의 문자열을 입력받고, 특정 문자를 입력받아 해당 특정문자가 입력받은 문자열에 몇 개 존재하는지 알아내는 프로그램을 작성하세요. 대소문자를 구분하지 않습니다.문자열의 길이는 100을 넘지 않습니다.",
    "input": "첫 줄에 문자열이 주어지고, 두 번째 줄에 문자가 주어진다. 문자열은 영어 알파벳으로만 구성되어 있습니다.",
    "output": "첫 줄에 해당 문자의 개수를 출력한다.",
    "ex1": "Computercooler c",
    "ex2": "2"
  },
  {
    "number": "s2",
    "title": "대소문자 변환",
    "description": "대문자와 소문자가 같이 존재하는 문자열을 입력받아 대문자는 소문자로 소문자는 대문자로 변환하여 출력하는 프로그램을 작성하세요.",
    "input": "첫 줄에 문자열이 입력된다. 문자열의 길이는 100을 넘지 않습니다. 문자열은 영어 알파벳으로만 구성되어 있습니다.",
    "output": "첫 줄에 대문자는 소문자로, 소문자는 대문자로 변환된 문자열을 출력합니다.",
    "ex1": "StuDY",
    "ex2": "sTUdy"
  },
  {
    "number": "s3",
    "title": "문장 속 단어",
    "description": "한 개의 문장이 주어지면 그 문장 속에서 가장 긴 단어를 출력하는 프로그램을 작성하세요. 문장속의 각 단어는 공백으로 구분됩니다.",
    "input": "첫 줄에 길이가 100을 넘지 않는 한 개의 문장이 주어집니다. 문장은 영어 알파벳으로만 구성되어 있습니다.",
    "output": "첫 줄에 가장 긴 단어를 출력한다. 가장 길이가 긴 단어가 여러개일 경우 문장속에서 가장 앞쪽에 위치한 단어를 답으로 합니다.",
    "ex1": "it is time to study",
    "ex2": "study"
  },
  {
    "number": "s4",
    "title": "단어 뒤집기",
    "description": "N개의 단어가 주어지면 각 단어를 뒤집어 출력하는 프로그램을 작성하세요.",
    "input": "첫 줄에 자연수 N(3<=N<=20)이 주어집니다. 두 번째 줄부터 N개의 단어가 각 줄에 하나씩 주어집니다. 단어는 영어 알파벳으로만 구성되어 있습니다.",
    "output": "N개의 단어를 입력된 순서대로 한 줄에 하나씩 뒤집어서 출력합니다.",
    "ex1": [
      "good",
      "Time",
      "Big"
      ],
    "ex2": [
      "doog",
      "emiT",
      "giB"
      ]
  },
  {
    "number": "s5",
    "title": "특정 문자 뒤집기",
    "description": "영어 알파벳과 특수문자로 구성된 문자열이 주어지면 영어 알파벳만 뒤집고, 특수문자는 자기 자리에 그대로 있는 문자열을 만들어 출력하는 프로그램을 작성하세요.",
    "input": "첫 줄에 길이가 100을 넘지 않는 문자열이 주어집니다.",
    "output": "첫 줄에 알파벳만 뒤집힌 문자열을 출력합니다.",
    "ex1": "a#b!GE*T@S",
    "ex2": "S#T!EG*b@a"
  },
  {
    "number": "s6",
    "title": "중복문자제거",
    "description": "소문자로 된 한개의 문자열이 입력되면 중복된 문자를 제거하고 출력하는 프로그램을 작성하세요. 중복이 제거된 문자열의 각 문자는 원래 문자열의 순서를 유지합니다.",
    "input": "첫 줄에 문자열이 입력됩니다. 문자열의 길이는 100을 넘지 않는다.",
    "output": "첫 줄에 중복문자가 제거된 문자열을 출력합니다.",
    "ex1": "ksekkset",
    "ex2": "kset"
  },
  {
    "number": "s7",
    "title": "회문 문자열",
    "description": "앞에서 읽을 때나 뒤에서 읽을 때나 같은 문자열을 회문 문자열이라고 합니다. 문자열이 입력되면 해당 문자열이 회문 문자열이면 \"YES\", 회문 문자열이 아니면 “NO\"를 출력하는 프로그램을 작성하세요. 단 회문을 검사할 때 대소문자를 구분하지 않습니다.",
    "input": "첫 줄에 길이 100을 넘지 않는 공백이 없는 문자열이 주어집니다.",
    "output": "첫 번째 줄에 회문 문자열인지의 결과를 YES 또는 NO로 출력합니다.",
    "ex1": "gooG",
    "ex2": "YES"
  },
  {
    "number": "s8",
    "title": "유효한 팰린드롬",
    "description": "앞에서 읽을 때나 뒤에서 읽을 때나 같은 문자열을 팰린드롬이라고 합니다. 문자열이 입력되면 해당 문자열이 팰린드롬이면 \"YES\", 아니면 “NO\"를 출력하는 프로그램을 작성하세요. 단 회문을 검사할 때 알파벳만 가지고 회문을 검사하며, 대소문자를 구분하지 않습니다. 알파벳 이외의 문자들의 무시합니다.",
    "input": "첫 줄에 길이 100을 넘지 않는 공백이 없는 문자열이 주어집니다.",
    "output": "첫 번째 줄에 팰린드롬인지의 결과를 YES 또는 NO로 출력합니다.",
    "ex1": "found7, time: study; Yduts; emit, 7Dnuof",
    "ex2": "YES"
  },
  {
    "number": "s9",
    "title": "숫자만 추출",
    "description": "문자와 숫자가 섞여있는 문자열이 주어지면 그 중 숫자만 추출하여 그 순서대로 자연수를 만듭니다. 만약 “tge0a1h205er”에서 숫자만 추출하면 0, 1, 2, 0, 5이고 이것을 자연수를 만들면 1205이 됩니다. 추출하여 만들어지는 자연수는 100,000,000을 넘지 않습니다.",
    "input": "첫 줄에 숫자가 섞인 문자열이 주어집니다. 문자열의 길이는 100을 넘지 않습니다.",
    "output": "첫 줄에 자연수를 출력합니다.",
    "ex1": "g0en2T0s8eSoft",
    "ex2": "208"
  },
  {
    "number": "s10",
    "title": "가장 짧은 문자거리",
    "description": "첫 번째 줄에 문자열 s와 문자 t가 주어진다. 문자열과 문자는 소문자로만 주어집니다. 문자열의 길이는 100을 넘지 않는다.",
    "input": "첫 줄에 문자열이 입력됩니다. 문자열의 길이는 100을 넘지 않는다.",
    "output": "첫 번째 줄에 각 문자열 s의 각 문자가 문자 t와 떨어진 거리를 순서대로 출력한다.",
    "ex1": "teachermode e",
    "ex2": "1 0 1 2 1 0 1 2 2 1 0"
  },
  {
    "number": "s11",
    "title": "문자열 압축",
    "description": "알파벳 대문자로 이루어진 문자열을 입력받아 같은 문자가 연속으로 반복되는 경우 반복되는 문자 바로 오른쪽에 반복 횟수를 표기하는 방법으로 문자열을 압축하는 프로그램을 작성하시오. 단 반복횟수가 1인 경우 생략합니다.",
    "input": "첫 줄에 문자열이 주어진다. 문자열의 길이는 100을 넘지 않는다.",
    "output": "첫 줄에 압축된 문자열을 출력한다.",
    "ex1": [
      "KKHSSSSSSSE",
      "K2HS7E"
    ],
    "ex2": [
      "KSTTTSEEKFKKKDJJGG",
      "KST3SE2KFK3DJ2G2"
    ]
  },
  {
    "number": "s12",
    "title": "암호",
    "description": "현수는 영희에게 알파벳 대문자로 구성된 비밀편지를 매일 컴퓨터를 이용해 보냅니다.\n\n비밀편지는 현수와 영희가 서로 약속한 암호로 구성되어 있습니다.\n\n비밀편지는 알파벳 한 문자마다 # 또는 *이 일곱 개로 구성되어 있습니다.\n\n만약 현수가 “#*****#”으로 구성된 문자를 보냈다면 영희는 현수와 약속한 규칙대로 다음과 같이 해석합니다.\n\n1. “#*****#”를 일곱자리의 이진수로 바꿉니다. #은 이진수의 1로, *이진수의 0으로 변환합니다. 결과는 “1000001”로 변환됩니다.\n\n2. 바뀐 2진수를 10진수화 합니다. “1000001”을 10진수화 하면 65가 됩니다.\n\n3. 아스키 번호가 65문자로 변환합니다. 즉 아스크번호 65는 대문자 'A'입니다. 참고로 대문자들의 아스키 번호는 'A'는 65번, ‘B'는 66번, ’C'는 67번 등 차례대로 1씩 증가하여 ‘Z'는 90번입니다.\n\n현수가 4개의 문자를 다음과 같이 신호로 보냈다면\n\n#****###**#####**#####**##**\n\n이 신호를 4개의 문자신호로 구분하면\n\n#****## --> 'C'\n\n#**#### --> 'O'\n\n#**#### --> 'O'\n\n#**##** --> 'L'\n\n최종적으로 “COOL\"로 해석됩니다.\n\n현수가 보낸 신호를 해석해주는 프로그램을 작성해서 영희를 도와주세요.",
    "input": "첫 줄에는 보낸 문자의 개수(10을 넘지 안습니다)가 입력된다. 다음 줄에는 문자의 개수의 일곱 배 만큼의 #또는 * 신호가 입력됩니다. 현수는 항상 대문자로 해석할 수 있는 신호를 보낸다고 가정합니다.",
    "output": "영희가 해석한 문자열을 출력합니다.",
    "ex1": [
      "4",
      "#****###**#####**#####**##**"
    ],
    "ex2": [
      "COOL"
    ]
  },
  {
    "number": "a1",
    "title": "큰 수 출력하기",
    "description": "N개의 정수를 입력받아, 자신의 바로 앞 수보다 큰 수만 출력하는 프로그램을 작성하세요. (첫 번째 수는 무조건 출력한다)",
    "input": "첫 줄에 자연수 N(1<=N<=100)이 주어지고, 그 다음 줄에 N개의 정수가 입력된다.",
    "output": "자신의 바로 앞 수보다 큰 수만 한 줄로 출력한다.",
    "ex1": [
      "6",
      "7 3 9 5 6 12"
    ],
    "ex2": [
      "7 9 6 12"
    ]
  },
  {
    "number": "a2",
    "title": "보이는 학생",
    "description": "선생님이 N명의 학생을 일렬로 세웠습니다. 일렬로 서 있는 학생의 키가 앞에서부터 순서대로 주어질 때, 맨 앞에 서 있는\n\n선생님이 볼 수 있는 학생의 수를 구하는 프로그램을 작성하세요. (앞에 서 있는 사람들보다 크면 보이고, 작거나 같으면 보이지 않습니다.)",
    "input": "첫 줄에 정수 N(5<=N<=100,000)이 입력된다. 그 다음줄에 N명의 학생의 키가 앞에서부터 순서대로 주어진다.",
    "output": "선생님이 볼 수 있는 최대학생수를 출력한다.",
    "ex1": [
      "8",
      "130 135 148 140 145 150 150 153"
    ],
    "ex2": [
      "5"
    ]
  },
  {
    "number": "a3",
    "title": "가위 바위 보",
    "description": "A, B 두 사람이 가위바위보 게임을 합니다. 총 N번의 게임을 하여 A가 이기면 A를 출력하고, B가 이기면 B를 출력합니다. 비길 경우에는 D를 출력합니다.\n\n가위, 바위, 보의 정보는 1:가위, 2:바위, 3:보로 정하겠습니다.\n\n예를 들어 N=5이면 ~~~~ 두 사람의 각 회의 가위, 바위, 보 정보가 주어지면 각 회를 누가 이겼는지 출력하는 프로그램을 작성하세요.",
    "input": "첫 번째 줄에 게임 횟수인 자연수 N(1<=N<=100)이 주어집니다.\n\n두 번째 줄에는 A가 낸 가위, 바위, 보 정보가 N개 주어집니다.\n\n세 번째 줄에는 B가 낸 가위, 바위, 보 정보가 N개 주어집니다.",
    "output": "각 줄에 각 회의 승자를 출력합니다. 비겼을 경우는 D를 출력합니다.",
    "ex1": [
      "5",
      "2 3 3 1 3",
      "1 1 2 2 3"
    ],
    "ex2": [
      "A",
      "B",
      "A",
      "B",
      "D"
    ]
  }
]